---
interface Props {
	skill: string;
	iconName: string;
	progress: string;
}

const { skill, iconName, progress } = Astro.props;
---

<div class='item-wrapper'>
	<div class='item bg-secondary/30'>
		<div class='logo'>
			<img src={`/icons/${iconName}.svg`} />
		</div>
		<span class='skill'>{skill}</span>
		<div class='progress' data-progress={progress}>
			<div class='bar'></div>
		</div>
	</div>
</div>

<script>
	import { gsap } from 'gsap';
	import { ScrollTrigger } from 'gsap/ScrollTrigger';

	gsap.registerPlugin(ScrollTrigger);

	document.querySelectorAll<HTMLElement>('.item-wrapper .item .progress .bar').forEach((bar, index) => {
		const progress = bar.parentElement?.getAttribute('data-progress');

		gsap.to(bar, {
			width: `${progress}`,
			ease: 'power1.inOut',
			scrollTrigger: {
				trigger: bar,
				scrub: 1.5,
				start: 'top 100%',
				end: 'bottom 80%',
			},
		});
	});
</script>

<style lang='scss'>
	.item-wrapper {
		display: flex;
		flex-direction: column;
		gap: 2rem;
		align-items: center;
		width: 80%;
		margin: 2rem auto 0 auto;

		.item {
			display: grid;
			gap: 2rem;
			width: 100%;
			grid-template-columns: 0.25fr 1fr 5fr;
			grid-template-rows: 1fr;
			border-radius: var(--radius);
			padding: 1rem 1.5rem;
			box-shadow: var(--box-shadow);

			& > * {
				display: flex;
				justify-content: center;
				align-items: center;
			}

			.logo {
				height: 40px;
			}

			.progress {
				width: 100%;
				background-color: var(--_primary-faint);
				border-radius: var(--radius);
				position: relative;

				.bar {
					top: 0;
					left: 0;
					position: absolute;
					width: 0;
					height: 100%;
					background-color: var(--_primary);
					border-radius: var(--radius);
					box-shadow: var(--box-shadow);
				}
			}
		}
	}
</style>

<style lang='scss' is:global>
	html:not(.dark) {
		.item-wrapper .item .logo {
			filter: brightness(0);
		}
	}
</style>
