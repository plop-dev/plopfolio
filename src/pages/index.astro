---
import Layout from '@/layouts/DefaultLayout.astro';
import { Image } from 'astro:assets';
import line from '@/images/line.svg?raw';
import { ButtonComponent } from '@/components/ui/ButtonComponent';

function getYear(dateString: string) {
	let today = new Date();
	let birthDate = new Date(dateString);
	let age = today.getFullYear() - birthDate.getFullYear();
	let m = today.getMonth() - birthDate.getMonth();
	if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
		age--;
	}
	return age;
}
---

<Layout title='Maxime C'>
	<main>
		<div class='content'>
			<div class='front-page'>
				<div class='title scroll-item'>
					<h1>Hey there</h1>
					<h1>I'm <span class='linear-gradient-text'><a>m</a><a>a</a><a>x</a><a>i</a><a>m</a><a>e</a></span></h1>
					<!-- <p>Just a {getAge('2010, 05, 28')} year old guy making websites just because I have nothing better to do.</p> -->
					<p>I make websites, and uh that's it :)</p>
					<ButtonComponent variant='default' link='/contact' text='Contact Me' />
				</div>

				<div class='line'>
					<Fragment set:html={line} id='line' />
				</div>
			</div>

			<div class='who-i-am scroll-item'>
				<h3>Based in the UK</h3>
				<p>
					Just a quick intro; I've been programming for {getYear('2021, 07, 13')} years programming in multiple languages with different frameworks (mostly
					AstroJS). I'm quite busy with school at the moment, but don't hesitate to contact me.
				</p>
			</div>
		</div>
	</main>
</Layout>

<script>
	import anime from 'animejs/lib/anime.es.js';

	document.addEventListener('astro:page-load', () => {
		let lineDrawing = anime({
			targets: '.line path',
			strokeDashoffset: [anime.setDashoffset, 0],
			easing: 'easeInCubic',
			duration: 2000,
			begin: function (anim) {
				//document.querySelector('path').setAttribute("stroke", "black");
				//document.querySelector('path').setAttribute("fill", "none");
			},
			complete: function (anim) {
				//document.querySelector('path').setAttribute("fill", "yellow");
			},
			autoplay: false,
		});
		lineDrawing.play();

		let textAnim = anime({
			targets: '.title .linear-gradient-text a',
			translateY: 30,
			delay: anime.stagger(100),
			autoplay: false,
		});
		console.log(textAnim);
		textAnim.play();
	});
</script>

<style lang='scss'>
	.content {
		min-width: 100vw;
		max-width: 100vw;
		height: auto;
		position: relative;
		display: flex;
		flex-direction: column;
		gap: 15%;

		.front-page {
			height: 100dvh;
			width: 100%;

			.line {
				position: absolute;
				bottom: 40%;
				left: 200px;
				width: 1750px;

				#line {
					z-index: -1;
					position: relative;
				}
			}

			.title {
				position: relative;
				top: 5%;

				h1 {
					&:not(:has(span)) {
						position: relative;

						&::after {
							content: 'ðŸ‘‹';
						}
					}
				}

				p {
					color: var(--_text-faint);
					margin: 32px 0;
					width: 100%;
				}
			}
		}

		.who-i-am {
			display: flex;
			flex-direction: column;
			gap: 8px;
			width: 30vw;
			height: 20vh;
			position: relative;
			top: 40%;
			// opacity: 0;
			// transform: translateY(80px) rotateX(35deg);
		}
	}
</style>
