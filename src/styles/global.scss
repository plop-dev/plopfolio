@use "sass:math";

@mixin create-blinking-animation($opacity-min: 0.35, $opacity-max: 1, $speed: "slow", $variant: "normal", $delay: 0s) {
    $duration: 3.5s;
    @if $speed == "quick" {
        $duration: 1.5s;
    } @else if $speed == "blink" {
        $duration: 1860ms;
    }

    @if $variant == "normal" {
        animation: blinking-normal $duration linear infinite;
        animation-delay: $delay;
        @keyframes blinking-normal {
            0% {
                opacity: 1;
            }
            37.5% {
                opacity: 1;
            }
            41.25% {
                opacity: 0;
            }
            45% {
                opacity: 1;
            }
            48.75% {
                opacity: 0;
            }
            52.5% {
                opacity: 1;
            }
            100% {
                opacity: 1;
            }
        }
    } @else if $variant == "breathing" {
        animation: breathing $duration ease-in-out infinite alternate;
        animation-delay: $delay;
        @keyframes breathing {
            0% {
                opacity: $opacity-min;
            }
            50% {
                opacity: $opacity-max;
            }
            100% {
                opacity: $opacity-min;
            }
        }
    } @else if $variant == "off" {
        animation: blinking-off $duration linear infinite;
        animation-delay: $delay;
        @keyframes blinking-off {
            0% {
                opacity: 0;
            }
            25% {
                opacity: $opacity-max;
            }
            50% {
                opacity: 0;
            }
            75% {
                opacity: $opacity-max;
            }
            100% {
                opacity: 0;
            }
        }
    } @else {
        @error "Invalid variant: #{$variant}";
    }
}

@import url("https://fonts.googleapis.com/css?family=Open%20Sans:700|Inter:400");
@import url("https://fonts.googleapis.com/css2?family=Fira+Code:wght@300..700&display=swap");

:root {
    --_text: #272727;
    --_text-faint: #4b4b4b;
    --_background: #e6e6e6;
    --_primary: #3cc56c;
    --_primary-faint: #31a359c7;
    --_secondary: #dbdbdb;
    --_accent: #36e4de;

    --_grey: #b4b4b4;
    --_grey-faint: #b4b4b491;

    --linearPrimarySecondary: linear-gradient(270deg, var(--_primary), var(--_secondary));
    --linearPrimaryAccent: linear-gradient(270deg, var(--_primary), var(--_accent));
    --linearSecondaryAccent: linear-gradient(270deg, var(--_secondary), var(--_accent));
    --radialPrimarySecondary: radial-gradient(var(--_primary), var(--_secondary));
    --radialPrimaryAccent: radial-gradient(var(--_primary), var(--_accent));
    --radialSecondaryAccent: radial-gradient(var(--_secondary), var(--_accent));

    --navbarHeight: calc(62px + 1px);

    --transition: 0.3s ease;
    --box-shadow: 0 0 1rem 0 rgba(0, 0, 0, 0.2);
}
:root.dark {
    --_text: #dadada;
    --_text-faint: #c0c0c0;
    --_background: #191919;
    --_primary: #2ac15f;
    --_primary-faint: #229b4da8;
    --_secondary: #242424;
    --_accent: #00c2bb;

    --_grey: #3d3d3d;
    --_grey-faint: #3d3d3d50;

    color-scheme: dark;
}

body {
    font-family: "Fira Code";
    font-weight: 400;
}

#bg {
    position: fixed;
    width: 100%;
    height: 100%;
    pointer-events: none;

    background-color: transparent;
    background-image: linear-gradient(var(--_grey-faint) 1.5px, transparent 1px),
        linear-gradient(90deg, var(--_grey-faint) 1.5px, transparent 1px);
    background-size: 30px 30px;

    mask-image: linear-gradient(var(--_grey-faint) 1.5px, transparent 1px),
        linear-gradient(90deg, var(--_grey-faint) 1.5px, transparent 1px);
    mask-size: 30px 30px;
    mask-composite: add;

    &::before {
        content: "";
        position: absolute;
        // top: var(--glowY);
        // left: var(--glowX);
        inset: var(--glowInset);
        width: 150px;
        height: 150px;
        background: radial-gradient(circle, var(--_primary) 25%, transparent 100%);
        filter: blur(25px);
        mix-blend-mode: screen;
    }
}

h1,
h2,
h3,
h4,
h5 {
    font-family: "Fira Code";
    font-weight: 700;
    letter-spacing: -2px;
}

html {
    font-size: 100%;
} /* 16px */

h1 {
    font-size: 4.21rem; /* 67.36px */
}

h2 {
    font-size: 3.158rem; /* 50.56px */
}

h3 {
    font-size: 2.369rem; /* 37.92px */
}

h4 {
    font-size: 1.777rem; /* 28.48px */
}

h5 {
    font-size: 1.333rem; /* 21.28px */
}

small {
    font-size: 0.75rem; /* 12px */
}

* {
    color: var(--_text);
    padding: 0;
    margin: 0;
}

body {
    overflow-x: hidden;
    background-color: var(--_background);
    transition: background-color var(--transition);
}

main {
    top: var(--navbarHeight);
    position: relative;
    width: 100%;
    height: 100%;
    padding: 3rem 8rem;
}

p {
    letter-spacing: -0.5px;
}

.linear-gradient-text {
    background: var(--linearPrimaryAccent);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

a {
    text-decoration: none;

    position: relative;
    display: inline-block;

    &:not(.ghost) {
        transition: color var(--transition);
        color: var(--_accent);
        &::after {
            content: "";
            position: absolute;
            left: 0;
            bottom: 0;
            width: 0%;
            height: 0.2rem;
            background: var(--linearPrimaryAccent);
            transition: width var(--transition);
            border-radius: var(--radius);
        }

        &:hover::after {
            width: 100%;
        }
    }
}

.scroll-anim {
    opacity: 0;
    transform: translateY(80px) rotateX(35deg);
}

.glow-underline {
    width: fit-content;
    position: relative;

    &::before {
        position: absolute;
        content: "";
        border-radius: var(--radius);
        width: 100%;
        height: 0.3rem;
        background: var(--linearPrimaryAccent);
        background-size: 200% 100%;
        background-position: 50% 0;
        bottom: 0;
        display: flex;
    }

    &::after {
        content: "";
        position: absolute;
        bottom: -0.1rem;
        left: 50%;
        transform: translateX(-50%);
        width: 100%;
        height: 0.5rem;
        background: var(--linearPrimaryAccent);
        filter: blur(5px);
        border-radius: calc(var(--radius) / 2);
        opacity: 0.5;
        z-index: -1;

        @include create-blinking-animation($opacity-min: 0.2, $opacity-max: 0.5, $speed: "blink", $variant: "normal");
    }
}
@for $i from 1 through 10 {
    .glow-underline:nth-of-type(#{$i})::after {
        $delay: (math.random(100) + 1) * 0.1s; // Random delay between 0s to 4.95s
        animation-delay: $delay;
    }
}
